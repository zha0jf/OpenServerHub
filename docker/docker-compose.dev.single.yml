# 开发环境Docker Compose配置 - 单容器版本
version: '3.8'

services:

  # 全栈开发服务（后端+前端）
  app:
    build:
      context: ..
      dockerfile: docker/backend.dev.dockerfile
    container_name: openserverhub-dev
    environment:
      # 数据库配置 - 开发环境使用SQLite
      DATABASE_URL: sqlite:///./data/openserverhub.db
      
      # 应用配置
      APP_NAME: OpenServerHub
      APP_VERSION: 1.0.0
      DEBUG: "true"
      
      # CORS配置
      CORS_ORIGINS: ""
      
      # IPMI配置
      IPMI_TIMEOUT: "30"
      IPMI_RETRY_COUNT: "3"
      
      # 监控配置
      MONITORING_ENABLED: "true"
      MONITORING_INTERVAL: "60"
      
      # 定时任务配置
      SCHEDULER_ENABLED: "true"
      SCHEDULER_TIMEZONE: Asia/Shanghai
      
      # 前端配置
      NODE_ENV: development
      REACT_APP_API_URL: ""
      REACT_APP_WS_URL: ""
    ports:
      - "8000:8000"  # 后端API
      - "3000:3000"  # 前端开发服务器
    volumes:
      # 后端代码热重载
      - ../backend:/app/backend
      # 前端代码热重载（排除node_modules目录）
      - ../frontend:/app/frontend
      - /app/frontend/node_modules
      # SQLite数据持久化
      - dev_data:/app/data
    networks:
      - openserverhub-dev-network
    working_dir: /app
    command: >
      sh -c "
        echo '=== 启动OpenServerHub开发环境 ===' &&
        echo '正在初始化后端数据库...' &&
        cd /app/backend &&
        python init_db.py &&
        echo '启动后端服务...' &&
        cd /app/backend &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/backend &
        BACKEND_PID=\$! &&
        echo '等待后端服务启动...' &&
        sleep 5 &&
        echo '启动前端开发服务器...' &&
        cd /app/frontend &&
        npm start -- --host 0.0.0.0 &
        FRONTEND_PID=\$! &&
        echo '=== 开发环境启动完成 ===' &&
        echo '后端API: http://\${SERVER_IP:-localhost}:8000' &&
        echo '前端应用: http://\${SERVER_IP:-localhost}:3000' &&
        echo 'API文档: http://\${SERVER_IP:-localhost}:8000/docs' &&
        echo '按 Ctrl+C 停止服务' &&
        wait \$BACKEND_PID \$FRONTEND_PID
      "

networks:
  openserverhub-dev-network:
    driver: bridge

volumes:
  dev_data:
    driver: local