version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: openserverhub-db
    environment:
      POSTGRES_DB: openserverhub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_db.py:/docker-entrypoint-initdb.d/init_db.py
    ports:
      - "5432:5432"
    networks:
      - openserverhub-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: openserverhub-redis
    ports:
      - "6379:6379"
    networks:
      - openserverhub-network
    restart: unless-stopped

  # 后端API服务
  backend:
    build:
      context: ../
      dockerfile: docker/backend.dockerfile
    container_name: openserverhub-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/openserverhub
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
    volumes:
      - ../backend/data:/app/data
      - ../backend/logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - openserverhub-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # 前端服务
  frontend:
    build:
      context: ../
      dockerfile: docker/frontend.dockerfile
    container_name: openserverhub-frontend
    ports:
      - "3000:80"
    networks:
      - openserverhub-network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: openserverhub-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - openserverhub-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  openserverhub-network:
    driver: bridge